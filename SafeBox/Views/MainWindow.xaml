<Window x:Class="SafeBox.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:SafeBox.Converters"
        xmlns:ta="clr-namespace:SafeBox.TriggerActions"
        xmlns:vm="clr-namespace:SafeBox.ViewModels"
        xmlns:lb="clr-namespace:SafeBox.Behaviors"
        mc:Ignorable="d"
        
        x:Name="Window"
        Title="SafeBox"
        Height="450" Width="800"
        Icon="/SafeIcon.ico"
        WindowStartupLocation="CenterScreen"
        MinHeight="320" MinWidth="620">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <conv:ServiceTypeToImageConverter x:Key="ServiceTypeToImageConverter" />
        <conv:SearchBoxHasTextConverter x:Key="SearchBoxHasTextConverter" />
        <lb:ListBoxAddingScrollBehavior x:Key="ListBoxAddingScrollBehavior" />

        <ContextMenu x:Key="ListBoxItemContext" Background="#FF4A278A">
            <MenuItem Header="Add" Foreground="White">
                <MenuItem.Icon>
                    <Image Source="/Resources/AddKey.png" />
                </MenuItem.Icon>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Click">
                        <b:InvokeCommandAction
                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.AddCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </MenuItem>
            <MenuItem Header="Remove" Foreground="White">
                <MenuItem.Icon>
                    <Image Source="/Resources/RemoveKey.png" />
                </MenuItem.Icon>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Click">
                        <b:InvokeCommandAction
                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.RemoveCommand}"
                            CommandParameter="{Binding}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>

    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF4A278A"/>
            <GradientStop Color="#FF241048" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <ListBox
            Margin="60,10,10,10"
            Background="#7F150025"
            ItemsSource="{Binding StorageCollection, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectedStorageItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

            <b:Interaction.Behaviors>
                <lb:ListBoxAddingScrollBehavior IsScrollingToEndEnabled="True" />
            </b:Interaction.Behaviors>
            
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="ContextMenu" Value="{StaticResource ListBoxItemContext}" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <VirtualizingStackPanel x:Name="itemPanel" Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Source="{Binding ServiceType, Converter={StaticResource ServiceTypeToImageConverter}}"
                                Width="24" Height="24" Margin="0,0,10,0" />

                            <TextBlock
                                Text="{Binding ResourceName}"
                                Foreground="White" FontSize="17"/>

                            <Button
                                x:Name="copyPwdBtn"
                                FocusVisualStyle="{x:Null}"
                                ToolTip="Copy a password to the clipboard"
                                ToolTipService.InitialShowDelay="1000"
                                Content="📋"
                                Width="24" Height="24"
                                Margin="10,0,0,0" Padding="0,0,0,2">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction
                                            Command="{Binding DataContext.CopyToClipboardCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                            CommandParameter="{Binding Text, ElementName=pwdBlock}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Button>

                            <Button
                                x:Name="showPwdBtn"
                                Visibility="{Binding IsPasswordVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                FocusVisualStyle="{x:Null}"
                                ToolTip="Temporarily shows the password"
                                ToolTipService.InitialShowDelay="1000"
                                Content="👁"
                                Width="24" Height="24"
                                Margin="5,0,0,0" Padding="0,0,0,2">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction
                                            Command="{Binding DataContext.ShowPasswordCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                            CommandParameter="{Binding}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,5,0,0">
                            <TextBlock Text="{Binding Login}" Foreground="White" Margin="34,0,0,0"/>

                            <TextBlock
                                x:Name="pwdBlock"
                                Foreground="White"
                                Margin="34,0,0,0"
                                Visibility="{Binding IsPasswordVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Opacity="0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPasswordVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="8" Duration="0:0:1" />
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="8" To="-2" Duration="0:0:3.5" BeginTime="0:0:0.2" />
                                                            <DoubleAnimation
                                                                Storyboard.Target="{Binding ElementName=itemPanel}"
                                                                Storyboard.TargetProperty="Height"
                                                                From="0"
                                                                To="25"
                                                                Duration="0:0:0.1">
                                                            </DoubleAnimation>

                                                            <DoubleAnimation
                                                                Storyboard.Target="{Binding ElementName=itemPanel}"
                                                                Storyboard.TargetProperty="Height"
                                                                From="25"
                                                                To="0"
                                                                Duration="0:0:0.1" BeginTime="0:0:2.9">
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <Setter
                                                    Property="Text"
                                                    Value="{Binding DisplayInsecurePassword, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </VirtualizingStackPanel>
                    <DataTemplate.Triggers>
                        <EventTrigger
                            SourceName="showPwdBtn"
                            RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="showPwdBtn"
                                        Storyboard.TargetProperty="Opacity"
                                        From="-15"
                                        To="1"
                                        Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger
                            SourceName="copyPwdBtn"
                            RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="copyPwdBtn"
                                        Storyboard.TargetProperty="Opacity"
                                        From="1"
                                        To="0.2"
                                        Duration="0:0:0.3"
                                        AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBox}">
                                <Grid x:Name="listBoxGrid">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="PreviewKeyDown">
                                            <ta:SearchBoxFocusAction Target="{Binding ElementName=SearchBox}"
                                                                     SearchTextProperty="{Binding SearchCriteria, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <Border x:Name="Border" BorderThickness="2" CornerRadius="0" BorderBrush="#195B99B0" Background="#33000000">
                                        <ScrollViewer Margin="0" Focusable="false">
                                            <StackPanel Margin="2" IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Border>

                                    <StackPanel
                                        HorizontalAlignment="Right" Orientation="Horizontal"
                                        Margin="10,0,10,0">

                                        <TextBox
                                            x:Name="SearchBox"
                                            Text="{Binding SearchCriteria, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            TextWrapping="NoWrap"
                                            VerticalContentAlignment="Center"
                                            BorderThickness="0,0,0,0"
                                            Padding="5,0,0,0"
                                            md:TextFieldAssist.TextFieldCornerRadius="2"
                                            md:TextFieldAssist.UnderlineBrush="Transparent"
                                            md:TextFieldAssist.HasLeadingIcon="True"
                                            md:TextFieldAssist.LeadingIcon="Search"
                                            md:HintAssist.FloatingScale="0"
                                            md:HintAssist.Hint="Поиск..."
                                            md:TextFieldAssist.HasClearButton="True" 
                                            Foreground="White" SelectionBrush="White"
                                            SelectionTextBrush="#6600D5FF"
                                            CaretBrush="White"
                                            RenderTransformOrigin="0.499,0.402"
                                            Background="#FF2F4459" BorderBrush="#337692AD"
                                            HorizontalContentAlignment="Stretch"
                                            Cursor="IBeam"
                                            Width="100" Height="32" VerticalAlignment="Bottom"
                                            Opacity="0.2" HorizontalAlignment="Right" Margin="0,0,25,15"/>
                                    </StackPanel>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger
                                        SourceName="SearchBox"
                                        Property="IsFocused"
                                        Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="fadeBoard">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="SearchBox"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.6"
                                                        Duration="0:0:0.2" />
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="SearchBox"
                                                        Storyboard.TargetProperty="Width"
                                                        To="220"
                                                        Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeBoard" />
                                        </Trigger.ExitActions>
                                    </Trigger>

                                    <!-- DataTrigger for when SearchBox has no text and is not focused -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SearchCriteria, Converter={StaticResource SearchBoxHasTextConverter}}" Value="False" />
                                            <Condition Binding="{Binding IsFocused, ElementName=SearchBox}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard x:Name="fadeOffBoard">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="SearchBox"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2"
                                                         Duration="0:0:0.2" />
                                                    <DoubleAnimation Storyboard.TargetName="SearchBox"
                                                         Storyboard.TargetProperty="Width"
                                                         To="100" 
                                                         Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeOffBoard" />
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>

                                    <!-- Trigger for when SearchBox has text and is not focused -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SearchCriteria, Converter={StaticResource SearchBoxHasTextConverter}}" Value="True" />
                                            <Condition Binding="{Binding IsFocused, ElementName=SearchBox}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="SearchBox" Property="Width" Value="220" />
                                        <Setter TargetName="SearchBox" Property="Opacity" Value="0.6" />
                                    </MultiDataTrigger>

                                    <Trigger Property="IsGrouping" Value="true">
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Style>
        </ListBox>
        <Border x:Name="sidePanelBorder"
            HorizontalAlignment="Left" Width="55" BorderBrush="#FF6635D6" BorderThickness="0,0,1,0">
            <StackPanel
                Background="#F21E1729">
                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetName="sidePanelBorder"
                                Storyboard.TargetProperty="Width"
                                BeginTime="0:0:0.1"
                                To="150"
                                Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetName="sidePanelBorder"
                                Storyboard.TargetProperty="Width"
                                BeginTime="0:0:0.1"
                                To="55"
                                Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </StackPanel.Triggers>
                <StackPanel Orientation="Horizontal" Margin="0,15,0,0" HorizontalAlignment="Left">
                    <Button
                        md:RippleAssist.IsCentered="True"
                        FocusVisualStyle="{x:Null}"
                        Content="⇲"
                        Margin="8,0,8,0"
                        Padding="0,4,0,4"
                        Width="39"
                        Foreground="#DDFFFFFF">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding ShowImportCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <TextBlock
                        TextWrapping="Wrap" Text="IMPORT" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,15,0,0" HorizontalAlignment="Left">
                    <Button
                        md:RippleAssist.IsCentered="True"
                        FocusVisualStyle="{x:Null}"
                        Content="⇱"
                        Margin="8,0,8,0"
                        Padding="0,4,0,4"
                        Width="39"
                        Foreground="#DDFFFFFF">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding ShowExportCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <TextBlock
                        TextWrapping="Wrap" Text="EXPORT" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,15,0,0">
                    <Button
                        md:RippleAssist.IsCentered="True"
                        FocusVisualStyle="{x:Null}"
                        Content="⚙"
                        Margin="8,0,8,0"
                        Padding="0,4,0,4"
                        Width="39"
                        Foreground="#DDFFFFFF">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding ShowSettingsCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <TextBlock
                    TextWrapping="Wrap" Text="SETTINGS" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,15,0,0" HorizontalAlignment="Left">
                    <Button
                        md:RippleAssist.IsCentered="True"
                        FocusVisualStyle="{x:Null}"
                        Content="❌"
                        Foreground="#DDE4FF41"
                        FontSize="13"
                        Padding="0,4,0,4"
                        VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                        Margin="8,0,8,0" Width="39">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding ElementName=Window}" MethodName="Close" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <TextBlock
                    TextWrapping="Wrap" Text="EXIT" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
            </StackPanel>
        </Border>
    </Grid>
</Window>
